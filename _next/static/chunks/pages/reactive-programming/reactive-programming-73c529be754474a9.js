(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[950],{2143:function(e,a,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/reactive-programming/reactive-programming",function(){return n(735)}])},735:function(e,a,n){"use strict";n.r(a),n.d(a,{__toc:function(){return s}});var r=n(5893),t=n(2673),i=n(373),o=n(8426);n(9128);var c=n(2643);let s=[{depth:2,value:"Reactive Programming",id:"reactive-programming"},{depth:2,value:"Event Driven 과 Message Driven 의 차이점",id:"event-driven-과-message-driven-의-차이점"},{depth:2,value:"Publisher, Subscriber 예제",id:"publisher-subscriber-예제"}];function _createMdxContent(e){let a=Object.assign({h2:"h2",ul:"ul",li:"li",p:"p"},(0,c.a)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"reactive-programming",children:"Reactive Programming"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["Reactive Programming 이란?\r\n비동기 데이터 stream 을 사용하는 패러다임입니다. Reactive Programming 방식은 Event Driven 한 방식의 프로그래밍 방식입니다. 모든 것이 이벤트로 구성되고 이벤트를 통해서 전파되어야 합니다.",(0,r.jsx)("br",{}),"\r\n데이터의 전달, 에러, 완료까지도 모두 이벤트로 취급됩니다.",(0,r.jsx)("br",{})]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:"Reactive Programming 은 RectiveMenifesto 에서 언급하는 4가지 원칙인 Responsive, Resilient, Elastic, Message Driven 을 모두 충족합니다."}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"동기 Stream"}),"\n",(0,r.jsx)(a.li,{children:"stream 을 이용한 흐름"}),"\n",(0,r.jsx)(a.li,{children:"비동기 future란?"}),"\n",(0,r.jsx)(a.li,{children:"future 를 이용한 처리 흐름의 단점"}),"\n",(0,r.jsx)(a.li,{children:"Reactive Stream 이란?"}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"event-driven-과-message-driven-의-차이점",children:"Event Driven 과 Message Driven 의 차이점"}),"\n",(0,r.jsx)(a.h2,{id:"publisher-subscriber-예제",children:"Publisher, Subscriber 예제"})]})}let m={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:a}=Object.assign({},(0,c.a)(),e.components);return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/reactive-programming/reactive-programming.mdx",route:"/reactive-programming/reactive-programming",timestamp:1709639608e3,pageMap:[{kind:"Folder",name:"concurrent-programming-basic",route:"/concurrent-programming-basic",children:[{kind:"MdxPage",name:"blocking-vs-nonblocking",route:"/concurrent-programming-basic/blocking-vs-nonblocking"},{kind:"MdxPage",name:"sync-vs-async",route:"/concurrent-programming-basic/sync-vs-async"},{kind:"Meta",data:{"sync-vs-async":"동기 vs 비동기","blocking-vs-nonblocking":"블로킹 vs 논 블로킹"}}]},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"nio-and-netty",route:"/nio-and-netty",children:[{kind:"MdxPage",name:"java-io-java-nio-java-aio",route:"/nio-and-netty/java-io-java-nio-java-aio"},{kind:"MdxPage",name:"java-nio-socket-communication",route:"/nio-and-netty/java-nio-socket-communication"},{kind:"MdxPage",name:"tomcat-vs-netty",route:"/nio-and-netty/tomcat-vs-netty"},{kind:"MdxPage",name:"what-is-aio",route:"/nio-and-netty/what-is-aio"},{kind:"MdxPage",name:"what-is-nio",route:"/nio-and-netty/what-is-nio"},{kind:"Meta",data:{"java-io-java-nio-java-aio":"Java IO,NIO,AIO","what-is-nio":"NIO 의 개념, 특징, 주요 클래스","java-nio-socket-communication":"Java NIO 소켓통신","what-is-aio":"AIO 의 개념, 특징, 예제","tomcat-vs-netty":"Tomcat vs Netty"}}]},{kind:"Folder",name:"r2dbc-mysql",route:"/r2dbc-mysql",children:[{kind:"MdxPage",name:"example",route:"/r2dbc-mysql/example"},{kind:"MdxPage",name:"what-is-r2dbc",route:"/r2dbc-mysql/what-is-r2dbc"},{kind:"Meta",data:{"what-is-r2dbc":"R2DBC 란?",example:"예제"}}]},{kind:"Folder",name:"reactive-mongodb",route:"/reactive-mongodb",children:[{kind:"MdxPage",name:"example",route:"/reactive-mongodb/example"},{kind:"Meta",data:{example:"예제"}}]},{kind:"Folder",name:"reactive-programming",route:"/reactive-programming",children:[{kind:"MdxPage",name:"intro",route:"/reactive-programming/intro"},{kind:"MdxPage",name:"java-nio-bad-point",route:"/reactive-programming/java-nio-bad-point"},{kind:"MdxPage",name:"netflix-rxjava-story",route:"/reactive-programming/netflix-rxjava-story"},{kind:"MdxPage",name:"proactor-pattern",route:"/reactive-programming/proactor-pattern"},{kind:"MdxPage",name:"reactive-programming",route:"/reactive-programming/reactive-programming"},{kind:"MdxPage",name:"reactive-streams-libraries",route:"/reactive-programming/reactive-streams-libraries"},{kind:"MdxPage",name:"reactor-pattern",route:"/reactive-programming/reactor-pattern"},{kind:"MdxPage",name:"what-is-epool",route:"/reactive-programming/what-is-epool"},{kind:"MdxPage",name:"what-is-reactive",route:"/reactive-programming/what-is-reactive"},{kind:"Meta",data:{intro:"intro","what-is-reactive":"Reactive란?","netflix-rxjava-story":"Netflix RxJava 이야기","reactive-programming":"Reactive Programming","reactive-streams-libraries":"Reactive Streams 라이브러리들","java-nio-bad-point":"Java NIO 의 논블로킹 방식 동기연산의 문제점","what-is-epoll":"epoll 이란?","reactor-pattern":"reactor 패턴","proactor-pattern":"proactor 패턴","what-is-epool":"What Is Epool"}}]},{kind:"Folder",name:"server-sent-event",route:"/server-sent-event",children:[{kind:"MdxPage",name:"example",route:"/server-sent-event/example"},{kind:"MdxPage",name:"what-is-sse",route:"/server-sent-event/what-is-sse"},{kind:"Meta",data:{"what-is-sse":"SSE (Server Sent Event) 의 개념",example:"예제코드"}}]},{kind:"Folder",name:"webflux-websocket",route:"/webflux-websocket",children:[{kind:"MdxPage",name:"example",route:"/webflux-websocket/example"},{kind:"Meta",data:{example:"예제"}}]},{kind:"Meta",data:{index:"Introduction","concurrent-programming-basic":"동시성 프로그래밍 개념들","nio-and-netty":"NIO, Netty","reactive-programming":"Reactive Programming","server-sent-event":"Server Sent Event (SSE)","webflux-websocket":"Webflux Websocket","r2dbc-mysql":"Spring Data R2dbc",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"Reactive Programming",headings:s},pageNextRoute:"/reactive-programming/reactive-programming",nextraLayout:i.ZP,themeConfig:o.Z};a.default=(0,t.j)(m)},8426:function(e,a,n){"use strict";var r=n(5893);n(7294);let t={logo:(0,r.jsx)("span",{children:"Docs Spring Webflux"}),project:{link:"https://github.com/chagchagchag/docs-spring-webflux"},docsRepositoryBase:"https://github.com/chagchagchag/docs-spring-webflux",footer:{text:"Nextra Docs Template"}};a.Z=t},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=2143)}),_N_E=e.O()}]);